[
  {
    "id": "EOC_GET_STAMINA_CONSUMPTION_MODIFIER",
    "type": "effect_on_condition",
    "eoc_type": "EVENT",
    "required_event": "avatar_moves",

    "effect": [
      {
        "math": ["u_inventory_weight", "=", "0"]
      },
      {
        "//": "while this is technically aimed at worn items, because of the pockets system, this grabs weight of the entire inventory sans the wielded item",
        "u_run_inv_eocs": "all",
        "search_data": [{ "worn_only": true }],
        "true_eocs": [
          {
            "id": "inline_EOC_GET_INVENTORY_WEIGHT",
            "effect": [
              {
                "math": ["u_inventory_weight", "+=", "n_val('weight')"]
              }
            ]
          }
        ]
      },
      {
        "//": "wielded items are separate from worn items",
        "u_run_inv_eocs": "all",
        "search_data": [{ "wielded_only": true }],
        "true_eocs": [
          {
            "id": "inline_EOC_GET_WIELDED_WEIGHT",
            "effect": [
              {
                "math": ["u_inventory_weight", "+=", "n_val('weight')"]
              }
            ]
          }
        ]
      },
      {
        "//math": [
          "the weight is calculated in milligrams",
          "dividing inventory weight by 10M yields weight in kilograms, divided by 10"
        ],
        "math": [
          "u_stamina_modifier",
          "=",
          "1 + ((u_inventory_weight / 10000000) ^ 2) / (u_val('strength') * 0.74)"
        ]
      },
      {
        "math": ["_stamina_delta", "=", "u_stamina_modifier ^ 2"]
      },
      {
        "math": ["u_val('stamina')", "-=", "_stamina_delta"]
      },
      {
        "if": { "math": ["debug_weight", "=", "1"] },
        "then": [
          {
            "math": ["_stamina_string", "=", "u_val('stamina')"]
          },
          {
            "u_message": "Stamina: <context_val:stamina_string> (-<context_val:stamina_delta>)"
          }
        ]
      },
      {
        "math": ["_fatigue_modifier", "=", "u_stamina_modifier"]
      },
      {
        "math": ["u_val('fatigue')", "+=", "_fatigue_modifier"]
      },
      {
        "if": { "math": ["debug_weight", "=", "1"] },
        "then": [
          {
            "math": ["_fatigue_string", "=", "u_val('fatigue')"]
          },
          {
            "u_message": "Fatigue: <context_val:fatigue_string> (+<context_val:fatigue_modifier>)"
          }
        ]
      }
    ]
  },

  {
    "id": "WEIGHT_INIT",
    "type": "effect_on_condition",
    "eoc_type": "EVENT",
    "required_event": "game_begin",

    "//notes": [
      [
        "this EOC adds or refreshes the effect that changes stamina regen",
        "which adding mods mid-playthrough isn't encouraged, this mod is safe to add or remove",
        "thus, we enable players to access the mod immediately"
      ],
      [
        "the EOC call before the effects manually recalculates the modifier",
        "that way, the modifier is applied immediately (or rather, next turn) upon the reception of the effect"
      ]
    ],

    "effect": [
      { "math": ["debug_weight", "=", "0"] },

      { "run_eocs": ["EOC_GET_STAMINA_CONSUMPTION_MODIFIER"] },
      { "u_lose_effect": "weight_affects_stamina" },
      { "u_add_effect": "weight_affects_stamina", "duration": 31536000 }
    ]
  },

  {
    "id": "DEBUG_EOC_REPORT_STAMINA_MODIFIER",
    "type": "effect_on_condition",

    "//notes": [
      "recalculate the modifier before reporting it",
      "this is useful for debugging, in case there's been a change in strength"
    ],

    "effect": [
      { "run_eocs": ["EOC_GET_STAMINA_CONSUMPTION_MODIFIER"] },
      { "u_message": "<u_val:stamina_modifier>" }
    ]
  },
  {
    "id": "DEBUG_EOC_REMOVE_WEIGHT_EFFECT",
    "type": "effect_on_condition",

    "//notes": [
      "this EOC allows you remove the effect before removing the mod mid-playthrough"
    ],

    "effect": [{ "u_lose_effect": "weight_affects_stamina" }]
  }
]
